// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`neoform-validation basic wrapper 1`] = `
<App
  data={
    Object {
      "country": "Sweden",
      "friends": Array [
        Object {
          "firstName": "Sad",
          "lastName": "Pepe",
        },
        Object {
          "firstName": "Forever",
          "lastName": "Alone",
        },
      ],
    }
  }
>
  <withContext(Form)
    data={
      Object {
        "country": "Sweden",
        "friends": Array [
          Object {
            "firstName": "Sad",
            "lastName": "Pepe",
          },
          Object {
            "firstName": "Forever",
            "lastName": "Alone",
          },
        ],
      }
    }
    getValue={[Function]}
    onChange={[Function]}
    onSubmit={[Function]}
  >
    <withState(getContext(withContext(withHandlers(withProps(omitProps(FormValidation))))))
      data={
        Object {
          "country": "Sweden",
          "friends": Array [
            Object {
              "firstName": "Sad",
              "lastName": "Pepe",
            },
            Object {
              "firstName": "Forever",
              "lastName": "Alone",
            },
          ],
        }
      }
      getValue={[Function]}
      onChange={[Function]}
      onSubmit={[Function]}
    >
      <getContext(withContext(withHandlers(withProps(omitProps(FormValidation)))))
        data={
          Object {
            "country": "Sweden",
            "friends": Array [
              Object {
                "firstName": "Sad",
                "lastName": "Pepe",
              },
              Object {
                "firstName": "Forever",
                "lastName": "Alone",
              },
            ],
          }
        }
        getValue={[Function]}
        onChange={[Function]}
        onSubmit={[Function]}
        setValidationFields={[Function]}
        validationFields={Object {}}
      >
        <withContext(withHandlers(withProps(omitProps(FormValidation))))
          data={
            Object {
              "country": "Sweden",
              "friends": Array [
                Object {
                  "firstName": "Sad",
                  "lastName": "Pepe",
                },
                Object {
                  "firstName": "Forever",
                  "lastName": "Alone",
                },
              ],
            }
          }
          getValue={[Function]}
          neoform={
            Object {
              "getValue": [Function],
              "state": Object {
                "country": "Sweden",
                "friends": Array [
                  Object {
                    "firstName": "Sad",
                    "lastName": "Pepe",
                  },
                  Object {
                    "firstName": "Forever",
                    "lastName": "Alone",
                  },
                ],
              },
              "updateData": [Function],
            }
          }
          onChange={[Function]}
          onSubmit={[Function]}
          setValidationFields={[Function]}
          validationFields={Object {}}
        >
          <withHandlers(withProps(omitProps(FormValidation)))
            data={
              Object {
                "country": "Sweden",
                "friends": Array [
                  Object {
                    "firstName": "Sad",
                    "lastName": "Pepe",
                  },
                  Object {
                    "firstName": "Forever",
                    "lastName": "Alone",
                  },
                ],
              }
            }
            getValue={[Function]}
            neoform={
              Object {
                "getValue": [Function],
                "state": Object {
                  "country": "Sweden",
                  "friends": Array [
                    Object {
                      "firstName": "Sad",
                      "lastName": "Pepe",
                    },
                    Object {
                      "firstName": "Forever",
                      "lastName": "Alone",
                    },
                  ],
                },
                "updateData": [Function],
              }
            }
            onChange={[Function]}
            onSubmit={[Function]}
            setValidationFields={[Function]}
            validationFields={Object {}}
          >
            <MyForm
              data={
                Object {
                  "country": "Sweden",
                  "friends": Array [
                    Object {
                      "firstName": "Sad",
                      "lastName": "Pepe",
                    },
                    Object {
                      "firstName": "Forever",
                      "lastName": "Alone",
                    },
                  ],
                }
              }
              getValue={[Function]}
              onChange={[Function]}
              onSubmit={[Function]}
              validate={[Function]}
              validationStatus={true}
            >
              <form
                onSubmit={[Function]}
              >
                <h1>
                  simple form
                </h1>
                <h2>
                  personal data
                </h2>
                <div>
                  <label>
                    first name (required)
                    <getContext(withProps(omitProps(Field)))
                      name="firstName"
                      validator={[Function]}
                    >
                      <withProps(omitProps(Field))
                        name="firstName"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                        validator={[Function]}
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="firstName"
                          onChange={[Function]}
                          validator={[Function]}
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            validator={[Function]}
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="firstName"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              validator={[Function]}
                            >
                              <MyInput
                                name="firstName"
                                onChange={[Function]}
                                validate={[Function]}
                              >
                                <span>
                                  <input
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                      }
                                    }
                                    value=""
                                  />
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <div>
                  <label>
                    last name (required)
                    <getContext(withProps(omitProps(Field)))
                      name="lastName"
                      validator={[Function]}
                    >
                      <withProps(omitProps(Field))
                        name="lastName"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                        validator={[Function]}
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="lastName"
                          onChange={[Function]}
                          validator={[Function]}
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            validator={[Function]}
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="lastName"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              validator={[Function]}
                            >
                              <MyInput
                                name="lastName"
                                onChange={[Function]}
                                validate={[Function]}
                              >
                                <span>
                                  <input
                                    name="lastName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                      }
                                    }
                                    value=""
                                  />
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <div>
                  <label>
                    country
                    <getContext(withProps(omitProps(Field)))
                      name="country"
                    >
                      <withProps(omitProps(Field))
                        name="country"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="country"
                          onChange={[Function]}
                          value="Sweden"
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="country"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            value="Sweden"
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="country"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              value="Sweden"
                            >
                              <MyInput
                                name="country"
                                onChange={[Function]}
                                validate={[Function]}
                                value="Sweden"
                              >
                                <span>
                                  <input
                                    name="country"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                      }
                                    }
                                    value="Sweden"
                                  />
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <h2>
                  friends
                </h2>
                <ul>
                  <li>
                    <div>
                      <label>
                        first name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[0].firstName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[0].firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[0].firstName"
                              onChange={[Function]}
                              value="Sad"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[0].firstName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Sad"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[0].firstName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Sad"
                                >
                                  <MyInput
                                    name="friends[0].firstName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Sad"
                                  >
                                    <span>
                                      <input
                                        name="friends[0].firstName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Sad"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                    <div>
                      <label>
                        last name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[0].lastName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[0].lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[0].lastName"
                              onChange={[Function]}
                              value="Pepe"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[0].lastName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Pepe"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[0].lastName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Pepe"
                                >
                                  <MyInput
                                    name="friends[0].lastName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Pepe"
                                  >
                                    <span>
                                      <input
                                        name="friends[0].lastName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Pepe"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                  </li>
                  <li>
                    <div>
                      <label>
                        first name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[1].firstName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[1].firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[1].firstName"
                              onChange={[Function]}
                              value="Forever"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[1].firstName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Forever"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[1].firstName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Forever"
                                >
                                  <MyInput
                                    name="friends[1].firstName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Forever"
                                  >
                                    <span>
                                      <input
                                        name="friends[1].firstName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Forever"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                    <div>
                      <label>
                        last name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[1].lastName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[1].lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[1].lastName"
                              onChange={[Function]}
                              value="Alone"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[1].lastName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Alone"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[1].lastName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Alone"
                                >
                                  <MyInput
                                    name="friends[1].lastName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Alone"
                                  >
                                    <span>
                                      <input
                                        name="friends[1].lastName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Alone"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                  </li>
                </ul>
                <button
                  type="submit"
                >
                  submit
                </button>
              </form>
            </MyForm>
          </withHandlers(withProps(omitProps(FormValidation)))>
        </withContext(withHandlers(withProps(omitProps(FormValidation))))>
      </getContext(withContext(withHandlers(withProps(omitProps(FormValidation)))))>
    </withState(getContext(withContext(withHandlers(withProps(omitProps(FormValidation))))))>
  </withContext(Form)>
</App>
`;

exports[`neoform-validation validate field -> invalid 1`] = `
<App
  data={
    Object {
      "country": "Sweden",
      "friends": Array [
        Object {
          "firstName": "Sad",
          "lastName": "Pepe",
        },
        Object {
          "firstName": "Forever",
          "lastName": "Alone",
        },
      ],
    }
  }
>
  <withContext(Form)
    data={
      Object {
        "country": "Sweden",
        "friends": Array [
          Object {
            "firstName": "Sad",
            "lastName": "Pepe",
          },
          Object {
            "firstName": "Forever",
            "lastName": "Alone",
          },
        ],
      }
    }
    getValue={[Function]}
    onChange={[Function]}
    onSubmit={[Function]}
  >
    <withState(getContext(withContext(withHandlers(withProps(omitProps(FormValidation))))))
      data={
        Object {
          "country": "Sweden",
          "friends": Array [
            Object {
              "firstName": "Sad",
              "lastName": "Pepe",
            },
            Object {
              "firstName": "Forever",
              "lastName": "Alone",
            },
          ],
        }
      }
      getValue={[Function]}
      onChange={[Function]}
      onSubmit={[Function]}
    >
      <getContext(withContext(withHandlers(withProps(omitProps(FormValidation)))))
        data={
          Object {
            "country": "Sweden",
            "friends": Array [
              Object {
                "firstName": "Sad",
                "lastName": "Pepe",
              },
              Object {
                "firstName": "Forever",
                "lastName": "Alone",
              },
            ],
          }
        }
        getValue={[Function]}
        onChange={[Function]}
        onSubmit={[Function]}
        setValidationFields={[Function]}
        validationFields={
          Object {
            "firstName": Object {
              "message": "required",
              "status": false,
            },
          }
        }
      >
        <withContext(withHandlers(withProps(omitProps(FormValidation))))
          data={
            Object {
              "country": "Sweden",
              "friends": Array [
                Object {
                  "firstName": "Sad",
                  "lastName": "Pepe",
                },
                Object {
                  "firstName": "Forever",
                  "lastName": "Alone",
                },
              ],
            }
          }
          getValue={[Function]}
          neoform={
            Object {
              "getValue": [Function],
              "state": Object {
                "country": "Sweden",
                "friends": Array [
                  Object {
                    "firstName": "Sad",
                    "lastName": "Pepe",
                  },
                  Object {
                    "firstName": "Forever",
                    "lastName": "Alone",
                  },
                ],
              },
              "updateData": [Function],
            }
          }
          onChange={[Function]}
          onSubmit={[Function]}
          setValidationFields={[Function]}
          validationFields={
            Object {
              "firstName": Object {
                "message": "required",
                "status": false,
              },
            }
          }
        >
          <withHandlers(withProps(omitProps(FormValidation)))
            data={
              Object {
                "country": "Sweden",
                "friends": Array [
                  Object {
                    "firstName": "Sad",
                    "lastName": "Pepe",
                  },
                  Object {
                    "firstName": "Forever",
                    "lastName": "Alone",
                  },
                ],
              }
            }
            getValue={[Function]}
            neoform={
              Object {
                "getValue": [Function],
                "state": Object {
                  "country": "Sweden",
                  "friends": Array [
                    Object {
                      "firstName": "Sad",
                      "lastName": "Pepe",
                    },
                    Object {
                      "firstName": "Forever",
                      "lastName": "Alone",
                    },
                  ],
                },
                "updateData": [Function],
              }
            }
            onChange={[Function]}
            onSubmit={[Function]}
            setValidationFields={[Function]}
            validationFields={
              Object {
                "firstName": Object {
                  "message": "required",
                  "status": false,
                },
              }
            }
          >
            <MyForm
              data={
                Object {
                  "country": "Sweden",
                  "friends": Array [
                    Object {
                      "firstName": "Sad",
                      "lastName": "Pepe",
                    },
                    Object {
                      "firstName": "Forever",
                      "lastName": "Alone",
                    },
                  ],
                }
              }
              getValue={[Function]}
              onChange={[Function]}
              onSubmit={[Function]}
              validate={[Function]}
              validationStatus={false}
            >
              <form
                onSubmit={[Function]}
              >
                <h1>
                  simple form
                </h1>
                <h2>
                  personal data
                </h2>
                <div>
                  <label>
                    first name (required)
                    <getContext(withProps(omitProps(Field)))
                      name="firstName"
                      validator={[Function]}
                    >
                      <withProps(omitProps(Field))
                        name="firstName"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                        validator={[Function]}
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="firstName"
                          onChange={[Function]}
                          validator={[Function]}
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            validator={[Function]}
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="firstName"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              validator={[Function]}
                            >
                              <MyInput
                                name="firstName"
                                onChange={[Function]}
                                validate={[Function]}
                                validationMessage="required"
                                validationStatus={false}
                              >
                                <span>
                                  <input
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "red",
                                      }
                                    }
                                    value=""
                                  />
                                  <span>
                                    required
                                  </span>
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <div>
                  <label>
                    last name (required)
                    <getContext(withProps(omitProps(Field)))
                      name="lastName"
                      validator={[Function]}
                    >
                      <withProps(omitProps(Field))
                        name="lastName"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                        validator={[Function]}
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="lastName"
                          onChange={[Function]}
                          validator={[Function]}
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            validator={[Function]}
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="lastName"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              validator={[Function]}
                            >
                              <MyInput
                                name="lastName"
                                onChange={[Function]}
                                validate={[Function]}
                              >
                                <span>
                                  <input
                                    name="lastName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                      }
                                    }
                                    value=""
                                  />
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <div>
                  <label>
                    country
                    <getContext(withProps(omitProps(Field)))
                      name="country"
                    >
                      <withProps(omitProps(Field))
                        name="country"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="country"
                          onChange={[Function]}
                          value="Sweden"
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="country"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            value="Sweden"
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="country"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              value="Sweden"
                            >
                              <MyInput
                                name="country"
                                onChange={[Function]}
                                validate={[Function]}
                                value="Sweden"
                              >
                                <span>
                                  <input
                                    name="country"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                      }
                                    }
                                    value="Sweden"
                                  />
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <h2>
                  friends
                </h2>
                <ul>
                  <li>
                    <div>
                      <label>
                        first name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[0].firstName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[0].firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[0].firstName"
                              onChange={[Function]}
                              value="Sad"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[0].firstName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Sad"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[0].firstName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Sad"
                                >
                                  <MyInput
                                    name="friends[0].firstName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Sad"
                                  >
                                    <span>
                                      <input
                                        name="friends[0].firstName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Sad"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                    <div>
                      <label>
                        last name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[0].lastName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[0].lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[0].lastName"
                              onChange={[Function]}
                              value="Pepe"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[0].lastName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Pepe"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[0].lastName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Pepe"
                                >
                                  <MyInput
                                    name="friends[0].lastName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Pepe"
                                  >
                                    <span>
                                      <input
                                        name="friends[0].lastName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Pepe"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                  </li>
                  <li>
                    <div>
                      <label>
                        first name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[1].firstName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[1].firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[1].firstName"
                              onChange={[Function]}
                              value="Forever"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[1].firstName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Forever"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[1].firstName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Forever"
                                >
                                  <MyInput
                                    name="friends[1].firstName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Forever"
                                  >
                                    <span>
                                      <input
                                        name="friends[1].firstName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Forever"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                    <div>
                      <label>
                        last name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[1].lastName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[1].lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[1].lastName"
                              onChange={[Function]}
                              value="Alone"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[1].lastName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Alone"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[1].lastName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Alone"
                                >
                                  <MyInput
                                    name="friends[1].lastName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Alone"
                                  >
                                    <span>
                                      <input
                                        name="friends[1].lastName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Alone"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                  </li>
                </ul>
                <button
                  type="submit"
                >
                  submit
                </button>
                <div
                  style={
                    Object {
                      "color": "red",
                    }
                  }
                >
                  <div>
                    Form is invalid
                  </div>
                  <div />
                </div>
              </form>
            </MyForm>
          </withHandlers(withProps(omitProps(FormValidation)))>
        </withContext(withHandlers(withProps(omitProps(FormValidation))))>
      </getContext(withContext(withHandlers(withProps(omitProps(FormValidation)))))>
    </withState(getContext(withContext(withHandlers(withProps(omitProps(FormValidation))))))>
  </withContext(Form)>
</App>
`;

exports[`neoform-validation validate field -> valid 1`] = `
<App
  data={
    Object {
      "country": "Sweden",
      "friends": Array [
        Object {
          "firstName": "Sad",
          "lastName": "Pepe",
        },
        Object {
          "firstName": "Forever",
          "lastName": "Alone",
        },
      ],
    }
  }
>
  <withContext(Form)
    data={
      Object {
        "country": "Sweden",
        "firstName": "hey from tests",
        "friends": Array [
          Object {
            "firstName": "Sad",
            "lastName": "Pepe",
          },
          Object {
            "firstName": "Forever",
            "lastName": "Alone",
          },
        ],
      }
    }
    getValue={[Function]}
    onChange={[Function]}
    onSubmit={[Function]}
  >
    <withState(getContext(withContext(withHandlers(withProps(omitProps(FormValidation))))))
      data={
        Object {
          "country": "Sweden",
          "firstName": "hey from tests",
          "friends": Array [
            Object {
              "firstName": "Sad",
              "lastName": "Pepe",
            },
            Object {
              "firstName": "Forever",
              "lastName": "Alone",
            },
          ],
        }
      }
      getValue={[Function]}
      onChange={[Function]}
      onSubmit={[Function]}
    >
      <getContext(withContext(withHandlers(withProps(omitProps(FormValidation)))))
        data={
          Object {
            "country": "Sweden",
            "firstName": "hey from tests",
            "friends": Array [
              Object {
                "firstName": "Sad",
                "lastName": "Pepe",
              },
              Object {
                "firstName": "Forever",
                "lastName": "Alone",
              },
            ],
          }
        }
        getValue={[Function]}
        onChange={[Function]}
        onSubmit={[Function]}
        setValidationFields={[Function]}
        validationFields={
          Object {
            "firstName": Object {
              "message": undefined,
              "status": true,
            },
          }
        }
      >
        <withContext(withHandlers(withProps(omitProps(FormValidation))))
          data={
            Object {
              "country": "Sweden",
              "firstName": "hey from tests",
              "friends": Array [
                Object {
                  "firstName": "Sad",
                  "lastName": "Pepe",
                },
                Object {
                  "firstName": "Forever",
                  "lastName": "Alone",
                },
              ],
            }
          }
          getValue={[Function]}
          neoform={
            Object {
              "getValue": [Function],
              "state": Object {
                "country": "Sweden",
                "firstName": "hey from tests",
                "friends": Array [
                  Object {
                    "firstName": "Sad",
                    "lastName": "Pepe",
                  },
                  Object {
                    "firstName": "Forever",
                    "lastName": "Alone",
                  },
                ],
              },
              "updateData": [Function],
            }
          }
          onChange={[Function]}
          onSubmit={[Function]}
          setValidationFields={[Function]}
          validationFields={
            Object {
              "firstName": Object {
                "message": undefined,
                "status": true,
              },
            }
          }
        >
          <withHandlers(withProps(omitProps(FormValidation)))
            data={
              Object {
                "country": "Sweden",
                "firstName": "hey from tests",
                "friends": Array [
                  Object {
                    "firstName": "Sad",
                    "lastName": "Pepe",
                  },
                  Object {
                    "firstName": "Forever",
                    "lastName": "Alone",
                  },
                ],
              }
            }
            getValue={[Function]}
            neoform={
              Object {
                "getValue": [Function],
                "state": Object {
                  "country": "Sweden",
                  "firstName": "hey from tests",
                  "friends": Array [
                    Object {
                      "firstName": "Sad",
                      "lastName": "Pepe",
                    },
                    Object {
                      "firstName": "Forever",
                      "lastName": "Alone",
                    },
                  ],
                },
                "updateData": [Function],
              }
            }
            onChange={[Function]}
            onSubmit={[Function]}
            setValidationFields={[Function]}
            validationFields={
              Object {
                "firstName": Object {
                  "message": undefined,
                  "status": true,
                },
              }
            }
          >
            <MyForm
              data={
                Object {
                  "country": "Sweden",
                  "firstName": "hey from tests",
                  "friends": Array [
                    Object {
                      "firstName": "Sad",
                      "lastName": "Pepe",
                    },
                    Object {
                      "firstName": "Forever",
                      "lastName": "Alone",
                    },
                  ],
                }
              }
              getValue={[Function]}
              onChange={[Function]}
              onSubmit={[Function]}
              validate={[Function]}
              validationStatus={true}
            >
              <form
                onSubmit={[Function]}
              >
                <h1>
                  simple form
                </h1>
                <h2>
                  personal data
                </h2>
                <div>
                  <label>
                    first name (required)
                    <getContext(withProps(omitProps(Field)))
                      name="firstName"
                      validator={[Function]}
                    >
                      <withProps(omitProps(Field))
                        name="firstName"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "firstName": "hey from tests",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                        validator={[Function]}
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="firstName"
                          onChange={[Function]}
                          validator={[Function]}
                          value="hey from tests"
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "firstName": "hey from tests",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            validator={[Function]}
                            value="hey from tests"
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="firstName"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "firstName": "hey from tests",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              validator={[Function]}
                              value="hey from tests"
                            >
                              <MyInput
                                name="firstName"
                                onChange={[Function]}
                                validate={[Function]}
                                validationStatus={true}
                                value="hey from tests"
                              >
                                <span>
                                  <input
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                      }
                                    }
                                    value="hey from tests"
                                  />
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <div>
                  <label>
                    last name (required)
                    <getContext(withProps(omitProps(Field)))
                      name="lastName"
                      validator={[Function]}
                    >
                      <withProps(omitProps(Field))
                        name="lastName"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "firstName": "hey from tests",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                        validator={[Function]}
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="lastName"
                          onChange={[Function]}
                          validator={[Function]}
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "firstName": "hey from tests",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            validator={[Function]}
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="lastName"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "firstName": "hey from tests",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              validator={[Function]}
                            >
                              <MyInput
                                name="lastName"
                                onChange={[Function]}
                                validate={[Function]}
                              >
                                <span>
                                  <input
                                    name="lastName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                      }
                                    }
                                    value=""
                                  />
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <div>
                  <label>
                    country
                    <getContext(withProps(omitProps(Field)))
                      name="country"
                    >
                      <withProps(omitProps(Field))
                        name="country"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "firstName": "hey from tests",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="country"
                          onChange={[Function]}
                          value="Sweden"
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="country"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "firstName": "hey from tests",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            value="Sweden"
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="country"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "firstName": "hey from tests",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              value="Sweden"
                            >
                              <MyInput
                                name="country"
                                onChange={[Function]}
                                validate={[Function]}
                                value="Sweden"
                              >
                                <span>
                                  <input
                                    name="country"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                      }
                                    }
                                    value="Sweden"
                                  />
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <h2>
                  friends
                </h2>
                <ul>
                  <li>
                    <div>
                      <label>
                        first name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[0].firstName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[0].firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "firstName": "hey from tests",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[0].firstName"
                              onChange={[Function]}
                              value="Sad"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[0].firstName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "firstName": "hey from tests",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Sad"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[0].firstName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "firstName": "hey from tests",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Sad"
                                >
                                  <MyInput
                                    name="friends[0].firstName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Sad"
                                  >
                                    <span>
                                      <input
                                        name="friends[0].firstName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Sad"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                    <div>
                      <label>
                        last name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[0].lastName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[0].lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "firstName": "hey from tests",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[0].lastName"
                              onChange={[Function]}
                              value="Pepe"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[0].lastName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "firstName": "hey from tests",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Pepe"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[0].lastName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "firstName": "hey from tests",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Pepe"
                                >
                                  <MyInput
                                    name="friends[0].lastName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Pepe"
                                  >
                                    <span>
                                      <input
                                        name="friends[0].lastName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Pepe"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                  </li>
                  <li>
                    <div>
                      <label>
                        first name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[1].firstName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[1].firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "firstName": "hey from tests",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[1].firstName"
                              onChange={[Function]}
                              value="Forever"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[1].firstName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "firstName": "hey from tests",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Forever"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[1].firstName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "firstName": "hey from tests",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Forever"
                                >
                                  <MyInput
                                    name="friends[1].firstName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Forever"
                                  >
                                    <span>
                                      <input
                                        name="friends[1].firstName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Forever"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                    <div>
                      <label>
                        last name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[1].lastName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[1].lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "firstName": "hey from tests",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[1].lastName"
                              onChange={[Function]}
                              value="Alone"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[1].lastName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "firstName": "hey from tests",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Alone"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[1].lastName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "firstName": "hey from tests",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Alone"
                                >
                                  <MyInput
                                    name="friends[1].lastName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Alone"
                                  >
                                    <span>
                                      <input
                                        name="friends[1].lastName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Alone"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                  </li>
                </ul>
                <button
                  type="submit"
                >
                  submit
                </button>
              </form>
            </MyForm>
          </withHandlers(withProps(omitProps(FormValidation)))>
        </withContext(withHandlers(withProps(omitProps(FormValidation))))>
      </getContext(withContext(withHandlers(withProps(omitProps(FormValidation)))))>
    </withState(getContext(withContext(withHandlers(withProps(omitProps(FormValidation))))))>
  </withContext(Form)>
</App>
`;

exports[`neoform-validation validate field without validator 1`] = `
<App
  data={
    Object {
      "country": "Sweden",
      "friends": Array [
        Object {
          "firstName": "Sad",
          "lastName": "Pepe",
        },
        Object {
          "firstName": "Forever",
          "lastName": "Alone",
        },
      ],
    }
  }
>
  <withContext(Form)
    data={
      Object {
        "country": "Sweden",
        "friends": Array [
          Object {
            "firstName": "Sad",
            "lastName": "Pepe",
          },
          Object {
            "firstName": "Forever",
            "lastName": "Alone",
          },
        ],
      }
    }
    getValue={[Function]}
    onChange={[Function]}
    onSubmit={[Function]}
  >
    <withState(getContext(withContext(withHandlers(withProps(omitProps(FormValidation))))))
      data={
        Object {
          "country": "Sweden",
          "friends": Array [
            Object {
              "firstName": "Sad",
              "lastName": "Pepe",
            },
            Object {
              "firstName": "Forever",
              "lastName": "Alone",
            },
          ],
        }
      }
      getValue={[Function]}
      onChange={[Function]}
      onSubmit={[Function]}
    >
      <getContext(withContext(withHandlers(withProps(omitProps(FormValidation)))))
        data={
          Object {
            "country": "Sweden",
            "friends": Array [
              Object {
                "firstName": "Sad",
                "lastName": "Pepe",
              },
              Object {
                "firstName": "Forever",
                "lastName": "Alone",
              },
            ],
          }
        }
        getValue={[Function]}
        onChange={[Function]}
        onSubmit={[Function]}
        setValidationFields={[Function]}
        validationFields={Object {}}
      >
        <withContext(withHandlers(withProps(omitProps(FormValidation))))
          data={
            Object {
              "country": "Sweden",
              "friends": Array [
                Object {
                  "firstName": "Sad",
                  "lastName": "Pepe",
                },
                Object {
                  "firstName": "Forever",
                  "lastName": "Alone",
                },
              ],
            }
          }
          getValue={[Function]}
          neoform={
            Object {
              "getValue": [Function],
              "state": Object {
                "country": "Sweden",
                "friends": Array [
                  Object {
                    "firstName": "Sad",
                    "lastName": "Pepe",
                  },
                  Object {
                    "firstName": "Forever",
                    "lastName": "Alone",
                  },
                ],
              },
              "updateData": [Function],
            }
          }
          onChange={[Function]}
          onSubmit={[Function]}
          setValidationFields={[Function]}
          validationFields={Object {}}
        >
          <withHandlers(withProps(omitProps(FormValidation)))
            data={
              Object {
                "country": "Sweden",
                "friends": Array [
                  Object {
                    "firstName": "Sad",
                    "lastName": "Pepe",
                  },
                  Object {
                    "firstName": "Forever",
                    "lastName": "Alone",
                  },
                ],
              }
            }
            getValue={[Function]}
            neoform={
              Object {
                "getValue": [Function],
                "state": Object {
                  "country": "Sweden",
                  "friends": Array [
                    Object {
                      "firstName": "Sad",
                      "lastName": "Pepe",
                    },
                    Object {
                      "firstName": "Forever",
                      "lastName": "Alone",
                    },
                  ],
                },
                "updateData": [Function],
              }
            }
            onChange={[Function]}
            onSubmit={[Function]}
            setValidationFields={[Function]}
            validationFields={Object {}}
          >
            <MyForm
              data={
                Object {
                  "country": "Sweden",
                  "friends": Array [
                    Object {
                      "firstName": "Sad",
                      "lastName": "Pepe",
                    },
                    Object {
                      "firstName": "Forever",
                      "lastName": "Alone",
                    },
                  ],
                }
              }
              getValue={[Function]}
              onChange={[Function]}
              onSubmit={[Function]}
              validate={[Function]}
              validationStatus={true}
            >
              <form
                onSubmit={[Function]}
              >
                <h1>
                  simple form
                </h1>
                <h2>
                  personal data
                </h2>
                <div>
                  <label>
                    first name (required)
                    <getContext(withProps(omitProps(Field)))
                      name="firstName"
                      validator={[Function]}
                    >
                      <withProps(omitProps(Field))
                        name="firstName"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                        validator={[Function]}
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="firstName"
                          onChange={[Function]}
                          validator={[Function]}
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            validator={[Function]}
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="firstName"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              validator={[Function]}
                            >
                              <MyInput
                                name="firstName"
                                onChange={[Function]}
                                validate={[Function]}
                              >
                                <span>
                                  <input
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                      }
                                    }
                                    value=""
                                  />
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <div>
                  <label>
                    last name (required)
                    <getContext(withProps(omitProps(Field)))
                      name="lastName"
                      validator={[Function]}
                    >
                      <withProps(omitProps(Field))
                        name="lastName"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                        validator={[Function]}
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="lastName"
                          onChange={[Function]}
                          validator={[Function]}
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            validator={[Function]}
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="lastName"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              validator={[Function]}
                            >
                              <MyInput
                                name="lastName"
                                onChange={[Function]}
                                validate={[Function]}
                              >
                                <span>
                                  <input
                                    name="lastName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                      }
                                    }
                                    value=""
                                  />
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <div>
                  <label>
                    country
                    <getContext(withProps(omitProps(Field)))
                      name="country"
                    >
                      <withProps(omitProps(Field))
                        name="country"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="country"
                          onChange={[Function]}
                          value="Sweden"
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="country"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            value="Sweden"
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="country"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              value="Sweden"
                            >
                              <MyInput
                                name="country"
                                onChange={[Function]}
                                validate={[Function]}
                                value="Sweden"
                              >
                                <span>
                                  <input
                                    name="country"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                      }
                                    }
                                    value="Sweden"
                                  />
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <h2>
                  friends
                </h2>
                <ul>
                  <li>
                    <div>
                      <label>
                        first name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[0].firstName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[0].firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[0].firstName"
                              onChange={[Function]}
                              value="Sad"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[0].firstName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Sad"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[0].firstName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Sad"
                                >
                                  <MyInput
                                    name="friends[0].firstName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Sad"
                                  >
                                    <span>
                                      <input
                                        name="friends[0].firstName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Sad"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                    <div>
                      <label>
                        last name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[0].lastName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[0].lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[0].lastName"
                              onChange={[Function]}
                              value="Pepe"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[0].lastName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Pepe"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[0].lastName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Pepe"
                                >
                                  <MyInput
                                    name="friends[0].lastName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Pepe"
                                  >
                                    <span>
                                      <input
                                        name="friends[0].lastName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Pepe"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                  </li>
                  <li>
                    <div>
                      <label>
                        first name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[1].firstName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[1].firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[1].firstName"
                              onChange={[Function]}
                              value="Forever"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[1].firstName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Forever"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[1].firstName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Forever"
                                >
                                  <MyInput
                                    name="friends[1].firstName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Forever"
                                  >
                                    <span>
                                      <input
                                        name="friends[1].firstName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Forever"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                    <div>
                      <label>
                        last name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[1].lastName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[1].lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[1].lastName"
                              onChange={[Function]}
                              value="Alone"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[1].lastName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Alone"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[1].lastName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Alone"
                                >
                                  <MyInput
                                    name="friends[1].lastName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Alone"
                                  >
                                    <span>
                                      <input
                                        name="friends[1].lastName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Alone"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                  </li>
                </ul>
                <button
                  type="submit"
                >
                  submit
                </button>
              </form>
            </MyForm>
          </withHandlers(withProps(omitProps(FormValidation)))>
        </withContext(withHandlers(withProps(omitProps(FormValidation))))>
      </getContext(withContext(withHandlers(withProps(omitProps(FormValidation)))))>
    </withState(getContext(withContext(withHandlers(withProps(omitProps(FormValidation))))))>
  </withContext(Form)>
</App>
`;

exports[`neoform-validation validate form -> invalid 1`] = `
<App
  data={
    Object {
      "country": "Sweden",
      "friends": Array [
        Object {
          "firstName": "Sad",
          "lastName": "Pepe",
        },
        Object {
          "firstName": "Forever",
          "lastName": "Alone",
        },
      ],
    }
  }
>
  <withContext(Form)
    data={
      Object {
        "country": "Sweden",
        "friends": Array [
          Object {
            "firstName": "Sad",
            "lastName": "Pepe",
          },
          Object {
            "firstName": "Forever",
            "lastName": "Alone",
          },
        ],
      }
    }
    getValue={[Function]}
    onChange={[Function]}
    onSubmit={[Function]}
  >
    <withState(getContext(withContext(withHandlers(withProps(omitProps(FormValidation))))))
      data={
        Object {
          "country": "Sweden",
          "friends": Array [
            Object {
              "firstName": "Sad",
              "lastName": "Pepe",
            },
            Object {
              "firstName": "Forever",
              "lastName": "Alone",
            },
          ],
        }
      }
      getValue={[Function]}
      onChange={[Function]}
      onSubmit={[Function]}
    >
      <getContext(withContext(withHandlers(withProps(omitProps(FormValidation)))))
        data={
          Object {
            "country": "Sweden",
            "friends": Array [
              Object {
                "firstName": "Sad",
                "lastName": "Pepe",
              },
              Object {
                "firstName": "Forever",
                "lastName": "Alone",
              },
            ],
          }
        }
        getValue={[Function]}
        onChange={[Function]}
        onSubmit={[Function]}
        setValidationFields={[Function]}
        validationFields={
          Object {
            "firstName": Object {
              "message": "required",
              "status": false,
            },
            "lastName": Object {
              "message": "required",
              "status": false,
            },
          }
        }
      >
        <withContext(withHandlers(withProps(omitProps(FormValidation))))
          data={
            Object {
              "country": "Sweden",
              "friends": Array [
                Object {
                  "firstName": "Sad",
                  "lastName": "Pepe",
                },
                Object {
                  "firstName": "Forever",
                  "lastName": "Alone",
                },
              ],
            }
          }
          getValue={[Function]}
          neoform={
            Object {
              "getValue": [Function],
              "state": Object {
                "country": "Sweden",
                "friends": Array [
                  Object {
                    "firstName": "Sad",
                    "lastName": "Pepe",
                  },
                  Object {
                    "firstName": "Forever",
                    "lastName": "Alone",
                  },
                ],
              },
              "updateData": [Function],
            }
          }
          onChange={[Function]}
          onSubmit={[Function]}
          setValidationFields={[Function]}
          validationFields={
            Object {
              "firstName": Object {
                "message": "required",
                "status": false,
              },
              "lastName": Object {
                "message": "required",
                "status": false,
              },
            }
          }
        >
          <withHandlers(withProps(omitProps(FormValidation)))
            data={
              Object {
                "country": "Sweden",
                "friends": Array [
                  Object {
                    "firstName": "Sad",
                    "lastName": "Pepe",
                  },
                  Object {
                    "firstName": "Forever",
                    "lastName": "Alone",
                  },
                ],
              }
            }
            getValue={[Function]}
            neoform={
              Object {
                "getValue": [Function],
                "state": Object {
                  "country": "Sweden",
                  "friends": Array [
                    Object {
                      "firstName": "Sad",
                      "lastName": "Pepe",
                    },
                    Object {
                      "firstName": "Forever",
                      "lastName": "Alone",
                    },
                  ],
                },
                "updateData": [Function],
              }
            }
            onChange={[Function]}
            onSubmit={[Function]}
            setValidationFields={[Function]}
            validationFields={
              Object {
                "firstName": Object {
                  "message": "required",
                  "status": false,
                },
                "lastName": Object {
                  "message": "required",
                  "status": false,
                },
              }
            }
          >
            <MyForm
              data={
                Object {
                  "country": "Sweden",
                  "friends": Array [
                    Object {
                      "firstName": "Sad",
                      "lastName": "Pepe",
                    },
                    Object {
                      "firstName": "Forever",
                      "lastName": "Alone",
                    },
                  ],
                }
              }
              getValue={[Function]}
              onChange={[Function]}
              onSubmit={[Function]}
              validate={[Function]}
              validationStatus={false}
            >
              <form
                onSubmit={[Function]}
              >
                <h1>
                  simple form
                </h1>
                <h2>
                  personal data
                </h2>
                <div>
                  <label>
                    first name (required)
                    <getContext(withProps(omitProps(Field)))
                      name="firstName"
                      validator={[Function]}
                    >
                      <withProps(omitProps(Field))
                        name="firstName"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                        validator={[Function]}
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="firstName"
                          onChange={[Function]}
                          validator={[Function]}
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            validator={[Function]}
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="firstName"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              validator={[Function]}
                            >
                              <MyInput
                                name="firstName"
                                onChange={[Function]}
                                validate={[Function]}
                                validationMessage="required"
                                validationStatus={false}
                              >
                                <span>
                                  <input
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "red",
                                      }
                                    }
                                    value=""
                                  />
                                  <span>
                                    required
                                  </span>
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <div>
                  <label>
                    last name (required)
                    <getContext(withProps(omitProps(Field)))
                      name="lastName"
                      validator={[Function]}
                    >
                      <withProps(omitProps(Field))
                        name="lastName"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                        validator={[Function]}
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="lastName"
                          onChange={[Function]}
                          validator={[Function]}
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            validator={[Function]}
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="lastName"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              validator={[Function]}
                            >
                              <MyInput
                                name="lastName"
                                onChange={[Function]}
                                validate={[Function]}
                                validationMessage="required"
                                validationStatus={false}
                              >
                                <span>
                                  <input
                                    name="lastName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "red",
                                      }
                                    }
                                    value=""
                                  />
                                  <span>
                                    required
                                  </span>
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <div>
                  <label>
                    country
                    <getContext(withProps(omitProps(Field)))
                      name="country"
                    >
                      <withProps(omitProps(Field))
                        name="country"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="country"
                          onChange={[Function]}
                          value="Sweden"
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="country"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            value="Sweden"
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="country"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              value="Sweden"
                            >
                              <MyInput
                                name="country"
                                onChange={[Function]}
                                validate={[Function]}
                                value="Sweden"
                              >
                                <span>
                                  <input
                                    name="country"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                      }
                                    }
                                    value="Sweden"
                                  />
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <h2>
                  friends
                </h2>
                <ul>
                  <li>
                    <div>
                      <label>
                        first name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[0].firstName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[0].firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[0].firstName"
                              onChange={[Function]}
                              value="Sad"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[0].firstName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Sad"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[0].firstName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Sad"
                                >
                                  <MyInput
                                    name="friends[0].firstName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Sad"
                                  >
                                    <span>
                                      <input
                                        name="friends[0].firstName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Sad"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                    <div>
                      <label>
                        last name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[0].lastName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[0].lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[0].lastName"
                              onChange={[Function]}
                              value="Pepe"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[0].lastName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Pepe"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[0].lastName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Pepe"
                                >
                                  <MyInput
                                    name="friends[0].lastName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Pepe"
                                  >
                                    <span>
                                      <input
                                        name="friends[0].lastName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Pepe"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                  </li>
                  <li>
                    <div>
                      <label>
                        first name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[1].firstName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[1].firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[1].firstName"
                              onChange={[Function]}
                              value="Forever"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[1].firstName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Forever"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[1].firstName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Forever"
                                >
                                  <MyInput
                                    name="friends[1].firstName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Forever"
                                  >
                                    <span>
                                      <input
                                        name="friends[1].firstName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Forever"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                    <div>
                      <label>
                        last name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[1].lastName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[1].lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[1].lastName"
                              onChange={[Function]}
                              value="Alone"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[1].lastName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Alone"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[1].lastName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Alone"
                                >
                                  <MyInput
                                    name="friends[1].lastName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Alone"
                                  >
                                    <span>
                                      <input
                                        name="friends[1].lastName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Alone"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                  </li>
                </ul>
                <button
                  type="submit"
                >
                  submit
                </button>
                <div
                  style={
                    Object {
                      "color": "red",
                    }
                  }
                >
                  <div>
                    Form is invalid
                  </div>
                  <div />
                </div>
              </form>
            </MyForm>
          </withHandlers(withProps(omitProps(FormValidation)))>
        </withContext(withHandlers(withProps(omitProps(FormValidation))))>
      </getContext(withContext(withHandlers(withProps(omitProps(FormValidation)))))>
    </withState(getContext(withContext(withHandlers(withProps(omitProps(FormValidation))))))>
  </withContext(Form)>
</App>
`;

exports[`neoform-validation validate form -> valid 1`] = `
<App
  data={
    Object {
      "country": "Sweden",
      "friends": Array [
        Object {
          "firstName": "Sad",
          "lastName": "Pepe",
        },
        Object {
          "firstName": "Forever",
          "lastName": "Alone",
        },
      ],
    }
  }
>
  <withContext(Form)
    data={
      Object {
        "country": "Sweden",
        "firstName": "hey from tests",
        "friends": Array [
          Object {
            "firstName": "Sad",
            "lastName": "Pepe",
          },
          Object {
            "firstName": "Forever",
            "lastName": "Alone",
          },
        ],
        "lastName": "hey from tests 2",
      }
    }
    getValue={[Function]}
    onChange={[Function]}
    onSubmit={[Function]}
  >
    <withState(getContext(withContext(withHandlers(withProps(omitProps(FormValidation))))))
      data={
        Object {
          "country": "Sweden",
          "firstName": "hey from tests",
          "friends": Array [
            Object {
              "firstName": "Sad",
              "lastName": "Pepe",
            },
            Object {
              "firstName": "Forever",
              "lastName": "Alone",
            },
          ],
          "lastName": "hey from tests 2",
        }
      }
      getValue={[Function]}
      onChange={[Function]}
      onSubmit={[Function]}
    >
      <getContext(withContext(withHandlers(withProps(omitProps(FormValidation)))))
        data={
          Object {
            "country": "Sweden",
            "firstName": "hey from tests",
            "friends": Array [
              Object {
                "firstName": "Sad",
                "lastName": "Pepe",
              },
              Object {
                "firstName": "Forever",
                "lastName": "Alone",
              },
            ],
            "lastName": "hey from tests 2",
          }
        }
        getValue={[Function]}
        onChange={[Function]}
        onSubmit={[Function]}
        setValidationFields={[Function]}
        validationFields={
          Object {
            "firstName": Object {
              "message": undefined,
              "status": true,
            },
            "lastName": Object {
              "message": undefined,
              "status": true,
            },
          }
        }
      >
        <withContext(withHandlers(withProps(omitProps(FormValidation))))
          data={
            Object {
              "country": "Sweden",
              "firstName": "hey from tests",
              "friends": Array [
                Object {
                  "firstName": "Sad",
                  "lastName": "Pepe",
                },
                Object {
                  "firstName": "Forever",
                  "lastName": "Alone",
                },
              ],
              "lastName": "hey from tests 2",
            }
          }
          getValue={[Function]}
          neoform={
            Object {
              "getValue": [Function],
              "state": Object {
                "country": "Sweden",
                "firstName": "hey from tests",
                "friends": Array [
                  Object {
                    "firstName": "Sad",
                    "lastName": "Pepe",
                  },
                  Object {
                    "firstName": "Forever",
                    "lastName": "Alone",
                  },
                ],
                "lastName": "hey from tests 2",
              },
              "updateData": [Function],
            }
          }
          onChange={[Function]}
          onSubmit={[Function]}
          setValidationFields={[Function]}
          validationFields={
            Object {
              "firstName": Object {
                "message": undefined,
                "status": true,
              },
              "lastName": Object {
                "message": undefined,
                "status": true,
              },
            }
          }
        >
          <withHandlers(withProps(omitProps(FormValidation)))
            data={
              Object {
                "country": "Sweden",
                "firstName": "hey from tests",
                "friends": Array [
                  Object {
                    "firstName": "Sad",
                    "lastName": "Pepe",
                  },
                  Object {
                    "firstName": "Forever",
                    "lastName": "Alone",
                  },
                ],
                "lastName": "hey from tests 2",
              }
            }
            getValue={[Function]}
            neoform={
              Object {
                "getValue": [Function],
                "state": Object {
                  "country": "Sweden",
                  "firstName": "hey from tests",
                  "friends": Array [
                    Object {
                      "firstName": "Sad",
                      "lastName": "Pepe",
                    },
                    Object {
                      "firstName": "Forever",
                      "lastName": "Alone",
                    },
                  ],
                  "lastName": "hey from tests 2",
                },
                "updateData": [Function],
              }
            }
            onChange={[Function]}
            onSubmit={[Function]}
            setValidationFields={[Function]}
            validationFields={
              Object {
                "firstName": Object {
                  "message": undefined,
                  "status": true,
                },
                "lastName": Object {
                  "message": undefined,
                  "status": true,
                },
              }
            }
          >
            <MyForm
              data={
                Object {
                  "country": "Sweden",
                  "firstName": "hey from tests",
                  "friends": Array [
                    Object {
                      "firstName": "Sad",
                      "lastName": "Pepe",
                    },
                    Object {
                      "firstName": "Forever",
                      "lastName": "Alone",
                    },
                  ],
                  "lastName": "hey from tests 2",
                }
              }
              getValue={[Function]}
              onChange={[Function]}
              onSubmit={[Function]}
              validate={[Function]}
              validationStatus={true}
            >
              <form
                onSubmit={[Function]}
              >
                <h1>
                  simple form
                </h1>
                <h2>
                  personal data
                </h2>
                <div>
                  <label>
                    first name (required)
                    <getContext(withProps(omitProps(Field)))
                      name="firstName"
                      validator={[Function]}
                    >
                      <withProps(omitProps(Field))
                        name="firstName"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "firstName": "hey from tests",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                              "lastName": "hey from tests 2",
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                        validator={[Function]}
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="firstName"
                          onChange={[Function]}
                          validator={[Function]}
                          value="hey from tests"
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "firstName": "hey from tests",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                  "lastName": "hey from tests 2",
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            validator={[Function]}
                            value="hey from tests"
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="firstName"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "firstName": "hey from tests",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                    "lastName": "hey from tests 2",
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              validator={[Function]}
                              value="hey from tests"
                            >
                              <MyInput
                                name="firstName"
                                onChange={[Function]}
                                validate={[Function]}
                                validationStatus={true}
                                value="hey from tests"
                              >
                                <span>
                                  <input
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                      }
                                    }
                                    value="hey from tests"
                                  />
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <div>
                  <label>
                    last name (required)
                    <getContext(withProps(omitProps(Field)))
                      name="lastName"
                      validator={[Function]}
                    >
                      <withProps(omitProps(Field))
                        name="lastName"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "firstName": "hey from tests",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                              "lastName": "hey from tests 2",
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                        validator={[Function]}
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="lastName"
                          onChange={[Function]}
                          validator={[Function]}
                          value="hey from tests 2"
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "firstName": "hey from tests",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                  "lastName": "hey from tests 2",
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            validator={[Function]}
                            value="hey from tests 2"
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="lastName"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "firstName": "hey from tests",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                    "lastName": "hey from tests 2",
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              validator={[Function]}
                              value="hey from tests 2"
                            >
                              <MyInput
                                name="lastName"
                                onChange={[Function]}
                                validate={[Function]}
                                validationStatus={true}
                                value="hey from tests 2"
                              >
                                <span>
                                  <input
                                    name="lastName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                      }
                                    }
                                    value="hey from tests 2"
                                  />
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <div>
                  <label>
                    country
                    <getContext(withProps(omitProps(Field)))
                      name="country"
                    >
                      <withProps(omitProps(Field))
                        name="country"
                        neoform={
                          Object {
                            "getValidation": [Function],
                            "getValue": [Function],
                            "registerValidator": [Function],
                            "state": Object {
                              "country": "Sweden",
                              "firstName": "hey from tests",
                              "friends": Array [
                                Object {
                                  "firstName": "Sad",
                                  "lastName": "Pepe",
                                },
                                Object {
                                  "firstName": "Forever",
                                  "lastName": "Alone",
                                },
                              ],
                              "lastName": "hey from tests 2",
                            },
                            "updateData": [Function],
                            "validate": [Function],
                          }
                        }
                      >
                        <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                          name="country"
                          onChange={[Function]}
                          value="Sweden"
                        >
                          <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                            name="country"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "firstName": "hey from tests",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                  "lastName": "hey from tests 2",
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                            onChange={[Function]}
                            value="Sweden"
                          >
                            <withHandlers(withProps(omitProps(FieldValidation)))
                              name="country"
                              neoform={
                                Object {
                                  "getValidation": [Function],
                                  "getValue": [Function],
                                  "registerValidator": [Function],
                                  "state": Object {
                                    "country": "Sweden",
                                    "firstName": "hey from tests",
                                    "friends": Array [
                                      Object {
                                        "firstName": "Sad",
                                        "lastName": "Pepe",
                                      },
                                      Object {
                                        "firstName": "Forever",
                                        "lastName": "Alone",
                                      },
                                    ],
                                    "lastName": "hey from tests 2",
                                  },
                                  "updateData": [Function],
                                  "validate": [Function],
                                }
                              }
                              onChange={[Function]}
                              value="Sweden"
                            >
                              <MyInput
                                name="country"
                                onChange={[Function]}
                                validate={[Function]}
                                value="Sweden"
                              >
                                <span>
                                  <input
                                    name="country"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                      }
                                    }
                                    value="Sweden"
                                  />
                                </span>
                              </MyInput>
                            </withHandlers(withProps(omitProps(FieldValidation)))>
                          </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                        </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                      </withProps(omitProps(Field))>
                    </getContext(withProps(omitProps(Field)))>
                  </label>
                </div>
                <h2>
                  friends
                </h2>
                <ul>
                  <li>
                    <div>
                      <label>
                        first name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[0].firstName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[0].firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "firstName": "hey from tests",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                  "lastName": "hey from tests 2",
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[0].firstName"
                              onChange={[Function]}
                              value="Sad"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[0].firstName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "firstName": "hey from tests",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                      "lastName": "hey from tests 2",
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Sad"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[0].firstName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "firstName": "hey from tests",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                        "lastName": "hey from tests 2",
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Sad"
                                >
                                  <MyInput
                                    name="friends[0].firstName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Sad"
                                  >
                                    <span>
                                      <input
                                        name="friends[0].firstName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Sad"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                    <div>
                      <label>
                        last name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[0].lastName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[0].lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "firstName": "hey from tests",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                  "lastName": "hey from tests 2",
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[0].lastName"
                              onChange={[Function]}
                              value="Pepe"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[0].lastName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "firstName": "hey from tests",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                      "lastName": "hey from tests 2",
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Pepe"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[0].lastName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "firstName": "hey from tests",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                        "lastName": "hey from tests 2",
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Pepe"
                                >
                                  <MyInput
                                    name="friends[0].lastName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Pepe"
                                  >
                                    <span>
                                      <input
                                        name="friends[0].lastName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Pepe"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                  </li>
                  <li>
                    <div>
                      <label>
                        first name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[1].firstName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[1].firstName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "firstName": "hey from tests",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                  "lastName": "hey from tests 2",
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[1].firstName"
                              onChange={[Function]}
                              value="Forever"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[1].firstName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "firstName": "hey from tests",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                      "lastName": "hey from tests 2",
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Forever"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[1].firstName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "firstName": "hey from tests",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                        "lastName": "hey from tests 2",
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Forever"
                                >
                                  <MyInput
                                    name="friends[1].firstName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Forever"
                                  >
                                    <span>
                                      <input
                                        name="friends[1].firstName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Forever"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                    <div>
                      <label>
                        last name
                        <getContext(withProps(omitProps(Field)))
                          name="friends[1].lastName"
                        >
                          <withProps(omitProps(Field))
                            name="friends[1].lastName"
                            neoform={
                              Object {
                                "getValidation": [Function],
                                "getValue": [Function],
                                "registerValidator": [Function],
                                "state": Object {
                                  "country": "Sweden",
                                  "firstName": "hey from tests",
                                  "friends": Array [
                                    Object {
                                      "firstName": "Sad",
                                      "lastName": "Pepe",
                                    },
                                    Object {
                                      "firstName": "Forever",
                                      "lastName": "Alone",
                                    },
                                  ],
                                  "lastName": "hey from tests 2",
                                },
                                "updateData": [Function],
                                "validate": [Function],
                              }
                            }
                          >
                            <getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))
                              name="friends[1].lastName"
                              onChange={[Function]}
                              value="Alone"
                            >
                              <lifecycle(withHandlers(withProps(omitProps(FieldValidation))))
                                name="friends[1].lastName"
                                neoform={
                                  Object {
                                    "getValidation": [Function],
                                    "getValue": [Function],
                                    "registerValidator": [Function],
                                    "state": Object {
                                      "country": "Sweden",
                                      "firstName": "hey from tests",
                                      "friends": Array [
                                        Object {
                                          "firstName": "Sad",
                                          "lastName": "Pepe",
                                        },
                                        Object {
                                          "firstName": "Forever",
                                          "lastName": "Alone",
                                        },
                                      ],
                                      "lastName": "hey from tests 2",
                                    },
                                    "updateData": [Function],
                                    "validate": [Function],
                                  }
                                }
                                onChange={[Function]}
                                value="Alone"
                              >
                                <withHandlers(withProps(omitProps(FieldValidation)))
                                  name="friends[1].lastName"
                                  neoform={
                                    Object {
                                      "getValidation": [Function],
                                      "getValue": [Function],
                                      "registerValidator": [Function],
                                      "state": Object {
                                        "country": "Sweden",
                                        "firstName": "hey from tests",
                                        "friends": Array [
                                          Object {
                                            "firstName": "Sad",
                                            "lastName": "Pepe",
                                          },
                                          Object {
                                            "firstName": "Forever",
                                            "lastName": "Alone",
                                          },
                                        ],
                                        "lastName": "hey from tests 2",
                                      },
                                      "updateData": [Function],
                                      "validate": [Function],
                                    }
                                  }
                                  onChange={[Function]}
                                  value="Alone"
                                >
                                  <MyInput
                                    name="friends[1].lastName"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value="Alone"
                                  >
                                    <span>
                                      <input
                                        name="friends[1].lastName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                          }
                                        }
                                        value="Alone"
                                      />
                                    </span>
                                  </MyInput>
                                </withHandlers(withProps(omitProps(FieldValidation)))>
                              </lifecycle(withHandlers(withProps(omitProps(FieldValidation))))>
                            </getContext(lifecycle(withHandlers(withProps(omitProps(FieldValidation)))))>
                          </withProps(omitProps(Field))>
                        </getContext(withProps(omitProps(Field)))>
                      </label>
                    </div>
                  </li>
                </ul>
                <button
                  type="submit"
                >
                  submit
                </button>
              </form>
            </MyForm>
          </withHandlers(withProps(omitProps(FormValidation)))>
        </withContext(withHandlers(withProps(omitProps(FormValidation))))>
      </getContext(withContext(withHandlers(withProps(omitProps(FormValidation)))))>
    </withState(getContext(withContext(withHandlers(withProps(omitProps(FormValidation))))))>
  </withContext(Form)>
</App>
`;
